{"ast":null,"code":"import _classCallCheck from\"D:\\\\DEV-PROJECTS\\\\MS-FRONT\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\DEV-PROJECTS\\\\MS-FRONT\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\DEV-PROJECTS\\\\MS-FRONT\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\DEV-PROJECTS\\\\MS-FRONT\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import PropTypes from'react';import'./App.scss';var Leaderboard=/*#__PURE__*/function(_React$Component){_inherits(Leaderboard,_React$Component);var _super=_createSuper(Leaderboard);function Leaderboard(){_classCallCheck(this,Leaderboard);return _super.apply(this,arguments);}_createClass(Leaderboard,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"leaderboard\"},/*#__PURE__*/React.createElement(\"div\",{className:\"leaderboard-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"leaderboard-title\"},/*#__PURE__*/React.createElement(\"span\",null,\"Leaderboard\")),/*#__PURE__*/React.createElement(\"div\",{className:\"leaderboard-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"leaderboard-player\"},/*#__PURE__*/React.createElement(\"span\",null,\"Cristi : 60\")),/*#__PURE__*/React.createElement(\"div\",{className:\"leaderboard-player\"},/*#__PURE__*/React.createElement(\"span\",null,\"Iulia : 90\")),/*#__PURE__*/React.createElement(\"div\",{className:\"leaderboard-player\"},/*#__PURE__*/React.createElement(\"span\",null,\"Ioana: 102\")))));}}]);return Leaderboard;}(React.Component);// Cell Class\nvar Cell=/*#__PURE__*/function(_React$Component2){_inherits(Cell,_React$Component2);var _super2=_createSuper(Cell);function Cell(){_classCallCheck(this,Cell);return _super2.apply(this,arguments);}_createClass(Cell,[{key:\"getValue\",value:function getValue(){var value=this.props.value;if(!value.isRevealed){return this.props.value.isFlagged?\"üè≥Ô∏è\":null;}if(value.isMine){return\"üí£\";}if(value.neighbour===0){return null;}return value.neighbour;}},{key:\"render\",value:function render(){var _this$props=this.props,value=_this$props.value,onClick=_this$props.onClick,cMenu=_this$props.cMenu;var className=\"cell\"+(value.isRevealed?\"\":\" hidden\")+(value.isMine?\" is-mine\":\"\")+(value.isFlagged?\" is-flag\":\"\");return/*#__PURE__*/React.createElement(\"div\",{onClick:onClick,className:className,onContextMenu:cMenu},this.getValue());}}]);return Cell;}(React.Component);// Board Class\nvar Board=/*#__PURE__*/function(_React$Component3){_inherits(Board,_React$Component3);var _super3=_createSuper(Board);function Board(){var _this;_classCallCheck(this,Board);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super3.call.apply(_super3,[this].concat(args));_this.state={boardData:_this.initBoardData(_this.props.height,_this.props.width,_this.props.mines),gameStatus:\"Game in progress\",mineCount:_this.props.mines,time:0,hasStarted:false,myInterval:0};_this.tick=function(){if(_this.state.gameStatus===\"Game in progress\"){_this.setState({myInterval:setInterval(function(){_this.setState({time:_this.state.time+1});},1000)});}};return _this;}_createClass(Board,[{key:\"getMines\",/* Helper Functions */ // get mines\nvalue:function getMines(data){var mineArray=[];data.map(function(datarow){datarow.map(function(dataitem){if(dataitem.isMine){mineArray.push(dataitem);}});});return mineArray;}// get Flags\n},{key:\"getFlags\",value:function getFlags(data){var mineArray=[];data.map(function(datarow){datarow.map(function(dataitem){if(dataitem.isFlagged){mineArray.push(dataitem);}});});return mineArray;}// get Hidden cells\n},{key:\"getHidden\",value:function getHidden(data){var mineArray=[];data.map(function(datarow){datarow.map(function(dataitem){if(!dataitem.isRevealed){mineArray.push(dataitem);}});});return mineArray;}// get random number given a dimension\n},{key:\"getRandomNumber\",value:function getRandomNumber(dimension){// return Math.floor(Math.random() * dimension);\nreturn Math.floor(Math.random()*1000+1)%dimension;}// Gets initial board data\n},{key:\"initBoardData\",value:function initBoardData(height,width,mines){var data=this.createEmptyArray(height,width);data=this.plantMines(data,height,width,mines);data=this.getNeighbours(data,height,width);return data;}},{key:\"createEmptyArray\",value:function createEmptyArray(height,width){var data=[];for(var i=0;i<height;i++){data.push([]);for(var j=0;j<width;j++){data[i][j]={x:i,y:j,isMine:false,neighbour:0,isRevealed:false,isEmpty:false,isFlagged:false};}}return data;}// plant mines on the board\n},{key:\"plantMines\",value:function plantMines(data,height,width,mines){var randomx,randomy,minesPlanted=0;while(minesPlanted<mines){randomx=this.getRandomNumber(width);randomy=this.getRandomNumber(height);if(!data[randomx][randomy].isMine){data[randomx][randomy].isMine=true;minesPlanted++;}}return data;}// get number of neighbouring mines for each board cell\n},{key:\"getNeighbours\",value:function getNeighbours(data,height,width){var _this2=this;var updatedData=data,index=0;for(var i=0;i<height;i++){for(var j=0;j<width;j++){if(data[i][j].isMine!==true){(function(){var mine=0;var area=_this2.traverseBoard(data[i][j].x,data[i][j].y,data);area.map(function(value){if(value.isMine){mine++;}});if(mine===0){updatedData[i][j].isEmpty=true;}updatedData[i][j].neighbour=mine;})();}}}return updatedData;}},{key:\"traverseBoard\",// looks for neighbouring cells and returns them\nvalue:function traverseBoard(x,y,data){var el=[];//up\nif(x>0){el.push(data[x-1][y]);}//down\nif(x<this.props.height-1){el.push(data[x+1][y]);}//left\nif(y>0){el.push(data[x][y-1]);}//right\nif(y<this.props.width-1){el.push(data[x][y+1]);}// top left\nif(x>0&&y>0){el.push(data[x-1][y-1]);}// top right\nif(x>0&&y<this.props.width-1){el.push(data[x-1][y+1]);}// bottom right\nif(x<this.props.height-1&&y<this.props.width-1){el.push(data[x+1][y+1]);}// bottom left\nif(x<this.props.height-1&&y>0){el.push(data[x+1][y-1]);}return el;}// reveals the whole board\n},{key:\"revealBoard\",value:function revealBoard(){var updatedData=this.state.boardData;updatedData.map(function(datarow){datarow.map(function(dataitem){dataitem.isRevealed=true;});});this.setState({boardData:updatedData});}/* reveal logic for empty cell */},{key:\"revealEmpty\",value:function revealEmpty(x,y,data){var _this3=this;var area=this.traverseBoard(x,y,data);area.map(function(value){if(!value.isFlagged&&!value.isRevealed&&(value.isEmpty||!value.isMine)){data[value.x][value.y].isRevealed=true;if(value.isEmpty){_this3.revealEmpty(value.x,value.y,data);}}});return data;}// Handle User Events\n},{key:\"_handleCellClick\",value:function _handleCellClick(x,y){if(this.state.hasStarted===false){this.setState({hasStarted:true});this.tick();}// check if revealed. return if true.\nif(this.state.boardData[x][y].isRevealed||this.state.boardData[x][y].isFlagged)return null;// check if mine. game over if true\nif(this.state.boardData[x][y].isMine){this.setState({gameStatus:\"You Lost.\"});this.revealBoard();//oprim timerul \nclearInterval(this.state.myInterval);//sendScoreToAPI(this.state.time);\n//alert(\"game over\");\n}var updatedData=this.state.boardData;updatedData[x][y].isFlagged=false;updatedData[x][y].isRevealed=true;if(updatedData[x][y].isEmpty){updatedData=this.revealEmpty(x,y,updatedData);}if(this.getHidden(updatedData).length===this.props.mines){this.setState({mineCount:0,gameStatus:\"You Win.\"});this.revealBoard();clearInterval(this.state.myInterval);//sendScoreToAPI();\n}this.setState({boardData:updatedData,mineCount:this.props.mines-this.getFlags(updatedData).length});}},{key:\"_handleContextMenu\",value:function _handleContextMenu(e,x,y){e.preventDefault();var updatedData=this.state.boardData;var mines=this.state.mineCount;// check if already revealed\nif(updatedData[x][y].isRevealed)return;if(updatedData[x][y].isFlagged){updatedData[x][y].isFlagged=false;mines++;}else{updatedData[x][y].isFlagged=true;mines--;}if(mines===0){var mineArray=this.getMines(updatedData);var FlagArray=this.getFlags(updatedData);if(JSON.stringify(mineArray)===JSON.stringify(FlagArray)){this.setState({mineCount:0,gameStatus:\"You Win.\"});this.revealBoard();//alert(\"You Win\");\nclearInterval(this.state.interval);sendScoreToAPI();}}this.setState({boardData:updatedData,mineCount:mines});}},{key:\"renderBoard\",value:function renderBoard(data){var _this4=this;return data.map(function(datarow){return datarow.map(function(dataitem){return/*#__PURE__*/React.createElement(\"div\",{key:dataitem.x*datarow.length+dataitem.y},/*#__PURE__*/React.createElement(Cell,{onClick:function onClick(){return _this4._handleCellClick(dataitem.x,dataitem.y);},cMenu:function cMenu(e){return _this4._handleContextMenu(e,dataitem.x,dataitem.y);},value:dataitem}),datarow[datarow.length-1]===dataitem?/*#__PURE__*/React.createElement(\"div\",{className:\"clear\"}):\"\");});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"board\"},/*#__PURE__*/React.createElement(\"div\",{className:\"game-info\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"info\"},this.state.gameStatus),/*#__PURE__*/React.createElement(\"span\",{className:\"info\"},\"Mines remaining: \",this.state.mineCount),/*#__PURE__*/React.createElement(\"span\",{className:\"info\"},\"TIMER: \",this.state.time)),this.renderBoard(this.state.boardData),/*#__PURE__*/React.createElement(Leaderboard,null));}}]);return Board;}(React.Component);// Game Class\nvar Game=/*#__PURE__*/function(_React$Component4){_inherits(Game,_React$Component4);var _super4=_createSuper(Game);function Game(){var _this5;_classCallCheck(this,Game);for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}_this5=_super4.call.apply(_super4,[this].concat(args));_this5.state={height:8,width:8,mines:8};return _this5;}_createClass(Game,[{key:\"render\",value:function render(){var _this$state=this.state,height=_this$state.height,width=_this$state.width,mines=_this$state.mines;return/*#__PURE__*/React.createElement(\"div\",{className:\"game\"},/*#__PURE__*/React.createElement(Board,{height:height,width:width,mines:mines}));}}]);return Game;}(React.Component);var sendScoreToAPI=function sendScoreToAPI(time){//get player name from browser prompt\nvar playerName=prompt(\"Congrats for winning the game! Please enter your name: \",\"yourUsername\");if(playerName!=null){var dataToSave={time:time,//replace 10 with your actual variable (probably this.state.gameScore or this.state.time)\nname:playerName// currentTime: new Date()\n};// Actual API call\nfetch(\"http://localhost:1601/api/ms\",// replace with the url to your API\n{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(dataToSave)}).then(function(res){return res.json();}).then(function(result){alert('You saved your score');},// Note: it's important to handle errors here\nfunction(error){alert('Bad API call');console.log(error);});}};/*async function postData(url = '', data = {}) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          mode: 'no-cors', // no-cors, *cors, same-origin\n          //cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          //credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Accept': 'application/json, text/plain',\n            'Content-Type': 'application/json;charset=UTF-8'\n            },\n\n         // redirect: 'follow', // manual, *follow, error\n         // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n      \n      postData('https://localhost:44368/api/ms', { name:\"test\",time:1000 })\n        .then(data => {\n          console.log(data); // JSON data parsed by `response.json()` call\n        });*/export default Game;","map":{"version":3,"sources":["D:/DEV-PROJECTS/MS-FRONT/test-app/src/App.js"],"names":["React","PropTypes","Leaderboard","Component","Cell","value","props","isRevealed","isFlagged","isMine","neighbour","onClick","cMenu","className","getValue","Board","state","boardData","initBoardData","height","width","mines","gameStatus","mineCount","time","hasStarted","myInterval","tick","setState","setInterval","data","mineArray","map","datarow","dataitem","push","dimension","Math","floor","random","createEmptyArray","plantMines","getNeighbours","i","j","x","y","isEmpty","randomx","randomy","minesPlanted","getRandomNumber","updatedData","index","mine","area","traverseBoard","el","revealEmpty","revealBoard","clearInterval","getHidden","length","getFlags","e","preventDefault","getMines","FlagArray","JSON","stringify","interval","sendScoreToAPI","_handleCellClick","_handleContextMenu","renderBoard","Game","playerName","prompt","dataToSave","name","fetch","method","headers","body","then","res","json","result","alert","error","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'react'\n\nimport './App.scss';\n\n\nclass Leaderboard extends React.Component{\n    \n    render(){\n       return( <div className=\"leaderboard\">\n           <div className=\"leaderboard-container\">\n            <div className=\"leaderboard-title\">\n                <span>Leaderboard</span>\n            </div>\n            <div className=\"leaderboard-content\">\n                <div className=\"leaderboard-player\">\n                   <span>Cristi : 60</span>\n                  \n                </div>\n                <div className=\"leaderboard-player\">\n                   <span>Iulia : 90</span>\n                   \n                </div>\n                <div className=\"leaderboard-player\">\n                   <span>Ioana: 102</span>\n                   \n                </div>\n            </div>\n            </div>\n        </div>\n       )}\n}\n\n// Cell Class\nclass Cell extends React.Component {\n  getValue() {\n    const {value} = this.props;\n    \n    if (!value.isRevealed) {\n      return this.props.value.isFlagged ? \"üè≥Ô∏è\" : null;\n    }\n    if (value.isMine) {\n      return \"üí£\";\n    }\n    if (value.neighbour === 0) {\n      return null;\n    }\n    return value.neighbour;\n  }\n\n  render() {\n    const {value, onClick, cMenu} = this.props;\n    let className =\n      \"cell\" +\n      (value.isRevealed ? \"\" : \" hidden\") +\n      (value.isMine ? \" is-mine\" : \"\") +\n      (value.isFlagged ? \" is-flag\" : \"\");\n\n    return (\n      <div\n        onClick={onClick}\n        className={className}\n        onContextMenu={cMenu}\n      >\n        {this.getValue()}\n      </div>\n    );\n  }\n}\n\n// Board Class\nclass Board extends React.Component {\n  state = {\n        boardData: this.initBoardData(this.props.height, this.props.width, this.props.mines),\n        gameStatus: \"Game in progress\",\n        mineCount: this.props.mines,\n        time: 0,\n        hasStarted:false,\n        myInterval:0,\n    };\n\n    tick=()=>{\n      if (this.state.gameStatus===\"Game in progress\"){\n      \n\n      this.setState({myInterval:setInterval(()=>{\n        this.setState({\n          time:this.state.time+1\n        })\n      },1000)})\n     \n\n\n\n    }\n    }\n\n\n\n    \n\n    /* Helper Functions */\n\n    // get mines\n    getMines(data) {\n        let mineArray = [];\n\n        data.map(datarow => {\n            datarow.map((dataitem) => {\n                if (dataitem.isMine) {\n                    mineArray.push(dataitem);\n                }\n            });\n        });\n\n        return mineArray;\n    }\n\n    // get Flags\n    getFlags(data) {\n        let mineArray = [];\n\n        data.map(datarow => {\n            datarow.map((dataitem) => {\n                if (dataitem.isFlagged) {\n                    mineArray.push(dataitem);\n                }\n            });\n        });\n\n        return mineArray;\n    }\n\n    // get Hidden cells\n    getHidden(data) {\n        let mineArray = [];\n\n        data.map(datarow => {\n            datarow.map((dataitem) => {\n                if (!dataitem.isRevealed) {\n                    mineArray.push(dataitem);\n                }\n            });\n        });\n\n        return mineArray;\n    }\n\n    // get random number given a dimension\n    getRandomNumber(dimension) {\n        // return Math.floor(Math.random() * dimension);\n        return Math.floor((Math.random() * 1000) + 1) % dimension;\n    }\n\n    // Gets initial board data\n    initBoardData(height, width, mines) {\n        let data = this.createEmptyArray(height, width);\n        data = this.plantMines(data, height, width, mines);\n        data = this.getNeighbours(data, height, width);\n        return data;\n    }\n    createEmptyArray(height, width) {\n        let data = [];\n\n        for (let i = 0; i < height; i++) {\n            data.push([]);\n            for (let j = 0; j < width; j++) {\n                data[i][j] = {\n                    x: i,\n                    y: j,\n                    isMine: false,\n                    neighbour: 0,\n                    isRevealed: false,\n                    isEmpty: false,\n                    isFlagged: false,\n                };\n            }\n        }\n        return data;\n    }\n\n    // plant mines on the board\n    plantMines(data, height, width, mines) {\n        let randomx, randomy, minesPlanted = 0;\n\n        while (minesPlanted < mines) {\n            randomx = this.getRandomNumber(width);\n            randomy = this.getRandomNumber(height);\n            if (!(data[randomx][randomy].isMine)) {\n                data[randomx][randomy].isMine = true;\n                minesPlanted++;\n            }\n        }\n\n        return (data);\n    }\n\n    // get number of neighbouring mines for each board cell\n    getNeighbours(data, height, width) {\n        let updatedData = data, index = 0;\n\n        for (let i = 0; i < height; i++) {\n            for (let j = 0; j < width; j++) {\n                if (data[i][j].isMine !== true) {\n                    let mine = 0;\n                    const area = this.traverseBoard(data[i][j].x, data[i][j].y, data);\n                    area.map(value => {\n                        if (value.isMine) {\n                            mine++;\n                        }\n                    });\n                    if (mine === 0) {\n                        updatedData[i][j].isEmpty = true;\n                    }\n                    updatedData[i][j].neighbour = mine;\n                }\n            }\n        }\n\n        return (updatedData);\n    };\n\n    // looks for neighbouring cells and returns them\n    traverseBoard(x, y, data) {\n        const el = [];\n\n        //up\n        if (x > 0) {\n            el.push(data[x - 1][y]);\n        }\n\n        //down\n        if (x < this.props.height - 1) {\n            el.push(data[x + 1][y]);\n        }\n\n        //left\n        if (y > 0) {\n            el.push(data[x][y - 1]);\n        }\n\n        //right\n        if (y < this.props.width - 1) {\n            el.push(data[x][y + 1]);\n        }\n\n        // top left\n        if (x > 0 && y > 0) {\n            el.push(data[x - 1][y - 1]);\n        }\n\n        // top right\n        if (x > 0 && y < this.props.width - 1) {\n            el.push(data[x - 1][y + 1]);\n        }\n\n        // bottom right\n        if (x < this.props.height - 1 && y < this.props.width - 1) {\n            el.push(data[x + 1][y + 1]);\n        }\n\n        // bottom left\n        if (x < this.props.height - 1 && y > 0) {\n            el.push(data[x + 1][y - 1]);\n        }\n\n        return el;\n    }\n\n    // reveals the whole board\n    revealBoard() {\n        let updatedData = this.state.boardData;\n        updatedData.map((datarow) => {\n            datarow.map((dataitem) => {\n                dataitem.isRevealed = true;\n            });\n        });\n        this.setState({\n            boardData: updatedData\n        })\n    }\n\n    /* reveal logic for empty cell */\n    revealEmpty(x, y, data) {\n        let area = this.traverseBoard(x, y, data);\n        area.map(value => {\n            if (!value.isFlagged && !value.isRevealed && (value.isEmpty || !value.isMine)) {\n                data[value.x][value.y].isRevealed = true;\n                if (value.isEmpty) {\n                    this.revealEmpty(value.x, value.y, data);\n                }\n            }\n        });\n        return data;\n\n    }\n\n    // Handle User Events\n\n    _handleCellClick(x, y) {\n\n        if(this.state.hasStarted===false)\n        {\n            this.setState({hasStarted:true})\n            this.tick()\n        }\n        // check if revealed. return if true.\n        if (this.state.boardData[x][y].isRevealed || this.state.boardData[x][y].isFlagged)\n        \n        return null;\n            \n        // check if mine. game over if true\n        if (this.state.boardData[x][y].isMine) {\n            this.setState({gameStatus: \"You Lost.\"});\n            this.revealBoard();\n            //oprim timerul \n            clearInterval(this.state.myInterval)\n            \n            //sendScoreToAPI(this.state.time);\n            \n            //alert(\"game over\");\n        }\n\n        let updatedData = this.state.boardData;\n        updatedData[x][y].isFlagged = false;\n        updatedData[x][y].isRevealed = true;\n\n        if (updatedData[x][y].isEmpty) {\n         \n            \n            updatedData = this.revealEmpty(x, y, updatedData);\n        }\n\n        if (this.getHidden(updatedData).length === this.props.mines) {\n            this.setState({mineCount: 0, gameStatus: \"You Win.\"});\n            this.revealBoard();\n            \n                \n                \n            clearInterval(this.state.myInterval)\n            \n          \n            //sendScoreToAPI();\n        }\n\n        this.setState({\n            boardData: updatedData,\n            mineCount: this.props.mines - this.getFlags(updatedData).length,\n        });\n    }\n\n    _handleContextMenu(e, x, y) {\n        e.preventDefault();\n        let updatedData = this.state.boardData;\n        let mines = this.state.mineCount;\n\n        // check if already revealed\n        if (updatedData[x][y].isRevealed) return;\n\n        if (updatedData[x][y].isFlagged) {\n            updatedData[x][y].isFlagged = false;\n            mines++;\n        } else {\n            updatedData[x][y].isFlagged = true;\n            mines--;\n        }\n\n        if (mines === 0) {\n            const mineArray = this.getMines(updatedData);\n            const FlagArray = this.getFlags(updatedData);\n            if (JSON.stringify(mineArray) === JSON.stringify(FlagArray)) {\n                this.setState({mineCount: 0, gameStatus: \"You Win.\"});\n                this.revealBoard();\n                //alert(\"You Win\");\n                clearInterval(this.state.interval);\n                sendScoreToAPI();\n            }\n        }\n\n        this.setState({\n            boardData: updatedData,\n            mineCount: mines,\n        });\n    }\n\n    renderBoard(data) {\n        return data.map((datarow) => {\n            return datarow.map((dataitem) => {\n                return (\n                    <div key={dataitem.x * datarow.length + dataitem.y}>\n                        <Cell\n                            onClick={() => this._handleCellClick(dataitem.x, dataitem.y) } \n                            cMenu={(e) => this._handleContextMenu(e, dataitem.x, dataitem.y)}\n                            value={dataitem}\n                        />\n                        {(datarow[datarow.length - 1] === dataitem) ? <div className=\"clear\" /> : \"\"}\n                    </div>);\n            })\n        });\n\n    }\n\n   \n\n\n\n  render() {\n        return (\n            <div className=\"board\">\n                <div className=\"game-info\">\n                    <h1 className=\"info\">{this.state.gameStatus}</h1>\n                    <span className=\"info\">Mines remaining: {this.state.mineCount}</span>\n        <span className=\"info\">TIMER: {this.state.time}</span>\n                </div>\n                {\n                    this.renderBoard(this.state.boardData)\n                }\n                  \n                    <Leaderboard/>\n                \n               \n               \n                \n            </div>\n\n            \n        );\n    }\n}\n\n// Game Class\nclass Game extends React.Component {\n  state = {\n    height: 8,\n    width: 8,\n    mines: 8,\n    \n  };\n\n  render() {\n    const { height, width, mines } = this.state;\n    \n    return (\n      <div className=\"game\">\n        <Board height={height} width={width} mines={mines} />\n      </div>\n    );\n  }\n}\n\nCell.propTypes = {\n  value: PropTypes.func\n}\n\n\nvar sendScoreToAPI = (time) => {\n    //get player name from browser prompt\n    var playerName = prompt(\"Congrats for winning the game! Please enter your name: \", \"yourUsername\");\n    if (playerName != null) {\n      var dataToSave = {\n        time: time, //replace 10 with your actual variable (probably this.state.gameScore or this.state.time)\n        name: playerName,\n       // currentTime: new Date()\n      };\n      // Actual API call\n      fetch(\n        \"http://localhost:1601/api/ms\", // replace with the url to your API\n        {\n          method: 'POST', \n          headers: {\n             'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(dataToSave)\n        }\n        )\n        .then(res => res.json())\n        .then(\n          (result) => {\n            alert('You saved your score');\n          },\n          // Note: it's important to handle errors here\n          (error) => {\n            alert('Bad API call');\n            console.log(error);\n          }\n        )\n    }\n  }\n        \n       /*async function postData(url = '', data = {}) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          mode: 'no-cors', // no-cors, *cors, same-origin\n          //cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          //credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Accept': 'application/json, text/plain',\n            'Content-Type': 'application/json;charset=UTF-8'\n            },\n\n         // redirect: 'follow', // manual, *follow, error\n         // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n      \n      postData('https://localhost:44368/api/ms', { name:\"test\",time:1000 })\n        .then(data => {\n          console.log(data); // JSON data parsed by `response.json()` call\n        });*/\n\n\n\n\n    \n\n  \n\n\n\n\n  export default Game\n"]},"metadata":{},"sourceType":"module"}